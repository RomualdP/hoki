name: üöÄ DDD/CQRS Feature
description: Cr√©er une nouvelle fonctionnalit√© suivant l'architecture DDD/CQRS
title: "[Bounded Context] Brief description"
labels: ["ddd", "cqrs", "feature"]
assignees: []
body:
  - type: markdown
    attributes:
      value: |
        ## Nouvelle Feature DDD/CQRS
        Utilisez ce template pour cr√©er une fonctionnalit√© suivant les patterns Domain-Driven Design et CQRS.

  - type: dropdown
    id: bounded-context
    attributes:
      label: Bounded Context
      description: Quel bounded context est concern√© ?
      options:
        - club-management
        - training-management
        - match-management
        - tournament-management
        - user-management
        - shared
        - autre (pr√©ciser dans la description)
    validations:
      required: true

  - type: dropdown
    id: layer
    attributes:
      label: Couche Architecture
      description: Quelle couche est principalement concern√©e ?
      options:
        - domain (Entities, Value Objects, Repository Interfaces)
        - application (Commands, Queries, Handlers, Read Models)
        - infrastructure (Repositories, Mappers, External Services)
        - presentation (Controllers, DTOs)
        - transversal (plusieurs couches)
    validations:
      required: true

  - type: textarea
    id: context
    attributes:
      label: Contexte M√©tier
      description: Pourquoi cette fonctionnalit√© est-elle n√©cessaire ? Quel probl√®me r√©sout-elle ?
      placeholder: |
        Exemple : Nous devons permettre aux clubs d'inviter des membres par email.
        Actuellement, les membres doivent cr√©er manuellement leur compte et chercher le club.
    validations:
      required: true

  - type: textarea
    id: technical-requirements
    attributes:
      label: Exigences Techniques
      description: D√©taillez les composants √† cr√©er pour chaque couche
      placeholder: |
        - **Domain** : Invitation entity avec r√®gles m√©tier (expiration, validation email)
        - **Application** : InviteUserCommand, AcceptInvitationCommand, GetPendingInvitationsQuery
        - **Infrastructure** : InvitationRepository, InvitationMapper (Domain ‚Üî Prisma)
        - **Presentation** : InvitationsController avec Swagger documentation
    validations:
      required: true

  - type: textarea
    id: acceptance-criteria
    attributes:
      label: Crit√®res d'Acceptation
      description: Liste des crit√®res pour consid√©rer la feature comme termin√©e
      placeholder: |
        - [ ] Invitation entity cr√©√©e avec validation d'expiration
        - [ ] Command handlers impl√©ment√©s avec gestion d'erreurs
        - [ ] Repository avec mapper Prisma
        - [ ] Tests unitaires (Domain 100%, Application 95%)
        - [ ] Tests d'int√©gration pour le flow complet
        - [ ] Documentation API (Swagger)
      value: |
        - [ ]
        - [ ]
        - [ ]
    validations:
      required: true

  - type: textarea
    id: skills
    attributes:
      label: Skills Claude Code √† Utiliser
      description: Quels Skills de `.claude/skills/` doivent √™tre utilis√©s ?
      placeholder: |
        - `.claude/skills/ddd-bounded-context/`
        - `.claude/skills/cqrs-command-query/`
        - `.claude/skills/prisma-mapper/`
        - `.claude/skills/ddd-testing/`
        - `.claude/skills/api-contracts/`
      value: |
        - `.claude/skills/ddd-bounded-context/`
        - `.claude/skills/cqrs-command-query/`
    validations:
      required: true

  - type: textarea
    id: prisma-schema
    attributes:
      label: Modifications Prisma Schema (si n√©cessaire)
      description: Y a-t-il des changements √† faire dans le sch√©ma Prisma ?
      placeholder: |
        ```prisma
        model Invitation {
          id        String   @id @default(uuid())
          email     String
          clubId    String
          expiresAt DateTime
          // ...
        }
        ```

  - type: textarea
    id: dependencies
    attributes:
      label: D√©pendances
      description: Cette issue d√©pend-elle d'autres issues ou features ?
      placeholder: |
        - #123 : Email service doit √™tre impl√©ment√©
        - FRONT-001 : Interface d'invitation c√¥t√© frontend

  - type: dropdown
    id: priority
    attributes:
      label: Priorit√©
      options:
        - low
        - medium
        - high
        - critical
    validations:
      required: true

  - type: dropdown
    id: effort
    attributes:
      label: Effort Estim√©
      options:
        - small (1-2 heures)
        - medium (3-6 heures)
        - large (1-2 jours)
        - extra-large (3+ jours)

  - type: checkboxes
    id: quality-checklist
    attributes:
      label: Quality Checklist (√† cocher lors de l'impl√©mentation)
      description: Standards de qualit√© obligatoires (voir `.claude/skills/zero-warnings/`)
      options:
        - label: "Code autodocument√© (pas de commentaires inutiles)"
        - label: "Fonctions < 30 lignes, < 5 param√®tres"
        - label: "Typage strict (pas de `any`, pas de `unknown`)"
        - label: "Tests Domain 100%, Application 95%"
        - label: "Z√©ro warnings ESLint/TypeScript (pas de `@ts-ignore`, pas de `eslint-disable`)"
        - label: "Swagger documentation compl√®te"
