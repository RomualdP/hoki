{
  "hooks": {
    "PreToolUse": [
      {
        "matcher": "Edit|Write",
        "hooks": [
          {
            "type": "command",
            "command": "python3 -c \"import json, sys; data=json.load(sys.stdin); path=data.get('tool_input',{}).get('file_path',''); protected=['.env', 'package-lock.json', 'yarn.lock', '.git/']; sys.exit(2 if any(p in path for p in protected) else 0)\""
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Edit|Write",
        "hooks": [
          {
            "type": "command",
            "command": "jq -r '.tool_input.file_path // empty' | while read file_path; do if [ -n \"$file_path\" ] && echo \"$file_path\" | grep -qE '\\.(ts|tsx|js|jsx)$'; then cd volley-app-backend 2>/dev/null && npx prettier --write \"../$file_path\" 2>/dev/null || cd ../volley-app-frontend 2>/dev/null && npx prettier --write \"../$file_path\" 2>/dev/null || npx prettier --write \"$file_path\" 2>/dev/null; fi; done"
          },
          {
            "type": "command",
            "command": "jq -r '.tool_input.file_path // empty' | while read file_path; do if [ -n \"$file_path\" ] && echo \"$file_path\" | grep -qE '\\.(ts|tsx)$'; then if echo \"$file_path\" | grep -q 'volley-app-backend'; then cd volley-app-backend && npx eslint --fix \"../$file_path\" 2>/dev/null || true; elif echo \"$file_path\" | grep -q 'volley-app-frontend'; then cd volley-app-frontend && npx eslint --fix \"../$file_path\" 2>/dev/null || true; fi; fi; done"
          }
        ]
      }
    ],
    "UserPromptSubmit": [
      {
        "matcher": ".*",
        "hooks": [
          {
            "type": "command",
            "command": "echo 'ðŸ“‹ Rappel : Utiliser les Skills appropriÃ©es (.claude/skills/) pour Clean Code, Architecture, Testing' >&2"
          }
        ]
      }
    ]
  }
}
